#+TITLE:  Zhserver - Haskell Web Server for Zotero Database 
#+AUTHOR: Caio Rodrigues 
#+EMAIL:  <caiorss.rodrigues@gmail.com>

* Documentation 
** Overview 

Zhserver is an application server that provides a json REST API to
interface Zotero database and allows multiple users and third party
apps to search documents by collections, tags, author and so on. 

Basic functionality:

 - Query the database by
   - Collection
   - Tag
   - Author
   - Document ID
   - Download Zotero files. 

** Build Instructions 
*** Install Dependencies 

Install system dependencies (Arch Linux)

#+BEGIN_SRC sh
sudo pacman -S postgresql  extra/postgresql-libs
#+END_SRC

Install Haskell dependencies with stack 

#+BEGIN_SRC sh 
stack install HDBC-sqlite3
stack install HDBC-postgresql
stack install happstack-server
#+END_SRC

*** Compile 

#+BEGIN_SRC sh 
$ stack exec -- ghc --make Server 
Linking Server ...
#+END_SRC

** Usage 
*** Find the Zotero's databases 

Find the sqlite databases for testing 

#+BEGIN_SRC sh 
$ find ~/.mozilla -name zotero.sqlite
/home/arch/.mozilla/firefox/dic34vce.default/zotero/zotero.sqlite
/home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/zotero.sqlite
#+END_SRC

*** Find storage directory 

#+BEGIN_SRC sh 
$ find ~/.mozilla -name 'storage' | grep zotero
/home/arch/.mozilla/firefox/dic34vce.default/zotero/storage
/home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/storage
/home/arch/.mozilla/firefox/mwad0hks.zotero/storage

$ ls /home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/storage | head -n16
22HUC5F9/
22NEC2IE/
236SC55S/
2372MKGN/
23K7EW4R/
24P9755W/
258V847Q/
25F3TBCX/
25HSTF7M/
267B6WPX/
26B3KTBR/
26W3KU88/
27B9VSG4/
27ERHSIM/
27FEX8GN/
27GZRZ49/

$ ls /home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/storage/267B6WPX
 3512243057-widgets.js                                           ghosh_cover150.jpg          plusone.js
'3ZGfnXYPgAVNngtqatUNgAAAABJRU5ErkJggg=='                        gplus-32.png                product.jpg
 anon16-rounded.gif                                              gprofile_button-16.png      s_bottom.png
 b16-rounded.gif                                                 gradients_light.png         share_buttons_20_3.png
 body_gradient_tile_light.png                                    icon18_edit_allbkg.gif      shAutoloader.js
 brand                                                           icon18_email.gif            shCore.js
 cm.002.png                                                      icon18_wrench_allbkg.png    show_ads.js
 combinators-as-sublanguage-of-dsl.css                           icon_delete13.gif           stats-flipper.png
 combinators-as-sublanguage-of-dsl.html                          icon_wikipedia_search.png   s_top.png
 diagram-trans.gif                                               KhUMAAAAAElFTkSuQmCC        triangle_ltr.gif
'DLgASBKnApgkVgXIkhgKiNKJ005s4gDLbCZBiSxfygAAAABJRU5ErkJggg=='   mobile_share_icons4.png     triangle_open.gif
 favicon.ico                                                     openid16-rounded.gif        untitled
 feed-icon32x32.png                                              photo.jpg


$ ls /home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/storage/26B3KTBR/
'Translatable Finite State Time Machine.pdf'

#+END_SRC

*** Set the configuration file 

The file zotserver.conf stores the server configuration such as port
and host which the server will listen to, the storage path and the
database. 

Example: 

#+BEGIN_SRC sh 
ServerConfig {
               serverPort         = 8000
             , serverHost         = "0.0.0.0"
             , serverStoragePath  = "/home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/zotero" 
             , serverDatabase     = "sqlite:///home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/zotero.sqlite"
             }
#+END_SRC

The serverHost variable sets what address the server will listen to: 
 
 - 0.0.0.0   - Listen to all hosts
 - 127.0.0.1 - Listen to localhost only 

The serverDatabase variable sets the database used by the server. The
databases Sqlite and Postgres are supported. 

 - SQlite URI:    

#+BEGIN_SRC text 
sqlite:///home/arch/.mozilla/firefox/mwad0hks.zotero/zotero/zotero.sqlite
#+END_SRC

 - Postgres URI: 

#+BEGIN_SRC text 
postgres://postgres@localhost/zotero
#+END_SRC

** Benefits 

Find, classify information, books, magazines, laws, patents, technical
standards, web page snapshots and papers fast. 

** Road map 
   
 - [] Find items by tag
 - [] Find items by ID
 - [x] Find items by collection
 - [x] Find items by author
 - [] Find items by a group of authors
 - [] Improve design for mobile devices
 - [] Transfer the database from SQLite to Postgres SQL
 - [] Add the nix file to the project.
 - [] Add logging to the server.
 - [] Improve Front End
 - [] Improve User Interface Functionality
 - [] Improve User Interface Design 
 - [] Add tag search
 - [] Create JavaScript functions to create templates.
 - [] Add the database documentation
 - [] Implement a filter
 - [] Implement browser history
 - [] Implement user friendly URL 

* REST API doc
** End Points

The API has the following scheme:

| URL Route               | Description                                       |   |
|-------------------------+---------------------------------------------------+---|
| =/api=                  | Display the API documentation                     |   |
| =/api/colls=            | Returns all collections names and collections IDs |   |
| =/api/coll?id=20=       | Returns all items from collection which ID is 20  |   |
| =/api/item?id=10=       | Return the item which ID is 10                    |   |
| =/api/attachment?id=20= | Return a link to file of item  which ID is 10     |   |
|                         |                                                   |   |
** Examples 
*** Get item by Id 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/item?id=17 |  python -mjson.tool
  {
      "mime": null,
      "colls": [
          [
              7,
              "Linux"
          ]
      ],
      "data": [
          [
              "url",
              "http://www.digilife.be/quickreferences/QRC/LINUX%20Admin%20Quick%20Reference.pdf"
          ],
          [
              "accessDate",
              "2016-11-07 22:06:48"
          ],
          [
              "title",
              "inux/Unix Command Line Cheat Sheet"
          ]
      ],
      "authors": [],
      "id": 17,
      "file": "6DHDAQAP/LINUX Admin Quick Reference.pdf",
      "tags": [
          [
              8,
              "quickref"
          ],
          [
              9,
              "linux"
          ]
      ]
  }

#+END_SRC

*** Get Collections 

Example: Querying the REST api with curl: 

Get collections:

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/colls |  python -mjson.tool
  [
      {
          "name": "C++/CPP",
          "id": 8
      },
      {
          "name": "Fsharp",
          "id": 6
      },
      {
          "name": "Haskell",
          "id": 2
      },
      {
          "name": "Haskell Tutorials",
          "id": 5
      },
      {
          "name": "Haskell doc",
          "id": 3
      },
      {
          "name": "Linux",
          "id": 7
      }
  ]

#+END_SRC

*** Get all Items from a Collection 

Query all items wich belongs to collection Fsharp which id=6.

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/colls?id=6 |  python -mjson.tool
  [
      {
          "mime": null,
          "colls": [
              [
                  6,
                  "Fsharp"
              ]
          ],
          "data": [
              [
                  "url",
                  "http://tomasp.net/articles/fsharp-i-introduction/article.pdf"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:01:04"
              ],
              [
                  "title",
                  "F# Language Overview"
              ]
          ],
          "authors": [
              {
                  "first": "Tomas",
                  "last": "Petriceck",
                  "id": 4
              }
          ],
          "id": 12,
          "file": "678BV2HV/article.pdf",
          "tags": [
              [
                  2,
                  "fp"
              ],
              [
                  3,
                  "fsharp"
              ],
              [
                  4,
                  "doc"
              ],
              [
                  5,
                  "overview"
              ]
          ]
      },
      {
          "mime": null,
          "colls": [
              [
                  6,
                  "Fsharp"
              ]
          ],
          "data": [
              [
                  "url",
                  "http://fsharp.org/specs/language-spec/4.0/FSharpSpec-4.0-latest.pdf"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:00:06"
              ],
              [
                  "title",
                  "The F# 4.0 Language Specification"
              ]
          ],
          "authors": [
              {
                  "first": "Syme",
                  "last": "Don",
                  "id": 5
              },
              {
                  "first": "Alimov",
                  "last": "Anar",
                  "id": 6
              },
              {
                  "first": "Fischer",
                  "last": "Jomo",
                  "id": 7
              }
          ],
          "id": 13,
          "file": "A3APBZAZ/FSharpSpec-4.0-latest.pdf",
          "tags": [
              [
                  2,
                  "fp"
              ],
              [
                  3,
                  "fsharp"
              ],
              [
                  4,
                  "doc"
              ]
          ]
      }
  ]



#+END_SRC

*** Get all authors 

#+BEGIN_SRC json
$ curl -s http://localhost:8000/api/authors |  python -mjson.tool
[
    {
        "first": "",
        "last": "Center for History and New Media",
        "id": 1
    },
    {
        "first": "Alimov",
        "last": "Anar",
        "id": 6
    },
    {
        "first": "Alwyn",
        "last": "Goodloe",
        "id": 20
    },
    {
        "first": "Andrew D.",
        "last": "Gordon",
        "id": 15
    },
    {
        "first": "Dennis M.",
        "last": "Ritchie",
        "id": 9
    },
    {
        "first": "Fischer",
        "last": "Jomo",
        "id": 7
    },

...     ...      ...  ... 
    {
        "first": "Marc",
        "last": "Pouzet",
        "id": 23
    },
    {
        "first": "ONDREJ",
        "last": "\u0160UCH",
        "id": 17
    },
    {
        "first": "Ondrej",
        "last": "\u0160uch",
        "id": 22
    },
    {
        "first": "Paul",
        "last": "Cobbat",
        "id": 8
    },
    {
        "first": "Peter",
        "last": "Jankovic",
        "id": 21
    },
    {
        "first": "R",
        "last": "Hiptmar",
        "id": 13
    },
    {
        "first": "Syme",
        "last": "Don",
        "id": 5
    },
    {
        "first": "Tomas",
        "last": "Petriceck",
        "id": 4
    },
    {
        "first": "Wayne L.",
        "last": "Winston",
        "id": 11
    }
]

#+END_SRC

*** Get all items that belongs to an author 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/authors?id=10 |  python -mjson.tool
  [
      {
          "mime": null,
          "colls": [],
          "data": [
              [
                  "url",
                  "http://jetsonhacks.com/wp-content/uploads/2016/08/unix.pdf"
              ],
              [
                  "volume",
                  "17"
              ],
              [
                  "issue",
                  "7"
              ],
              [
                  "publicationTitle",
                  "Communications of the ACM"
              ],
              [
                  "date",
                  "1974-00-00 1974"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:11:16"
              ],
              [
                  "libraryCatalog",
                  "Google Scholar"
              ],
              [
                  "title",
                  "The UNIX time-sharing system"
              ]
          ],
          "authors": [
              {
                  "first": "Dennis M.",
                  "last": "Ritchie",
                  "id": 9
              },
              {
                  "first": "Ken",
                  "last": "Thompson",
                  "id": 10
              }
          ],
          "id": 21,
          "file": "9NAZ5GJT/unix.pdf",
          "tags": []
      }
  ]

#+END_SRC

*** Get all tags 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/tags |  python -mjson.tool
  [
      {
          "name": "c++",
          "id": 10
      },
      {
          "name": "cpp",
          "id": 14
      },
      {
          "name": "doc",
          "id": 4
      },
      {
          "name": "fp",
          "id": 2
      },
      {
          "name": "frp",
          "id": 16
      },
      {
          "name": "fsharp",
          "id": 3
      },
      ... ... ...

      {
          "name": "numerical",
          "id": 11
      },
      {
          "name": "numerical methods",
          "id": 12
      },
      {
          "name": "overview",
          "id": 5
      },
      {
          "name": "quickref",
          "id": 8
      },
      {
          "name": "reactive",
          "id": 17
      },
      {
          "name": "simulation",
          "id": 15
      },
      {
          "name": "tutorial",
          "id": 7
      }
  ]
      
#+END_SRC

*** Get all items with a tag 

Get all items which contains the tag 'Linux' which Id=9.

#+BEGIN_SRC json
$ curl -s http://localhost:8000/api/tags?id=9 |  python -mjson.tool
[
    {
        "mime": null,
        "colls": [
            [
                7,
                "Linux"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.linuxdevcenter.com/excerpt/LinuxPG_quickref/linux.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:05:40"
            ],
            [
                "title",
                "Linux Quick Reference"
            ]
        ],
        "authors": [],
        "id": 15,
        "file": "ZJMVV5V8/linux.pdf",
        "tags": [
            [
                8,
                "quickref"
            ],
            [
                9,
                "linux"
            ]
        ]
    },
    {
        "mime": null,
        "colls": [
            [
                7,
                "Linux"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.digilife.be/quickreferences/QRC/LINUX%20Admin%20Quick%20Reference.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:06:48"
            ],
            [
                "title",
                "inux/Unix Command Line Cheat Sheet"
            ]
        ],
        "authors": [],
        "id": 17,
        "file": "6DHDAQAP/LINUX Admin Quick Reference.pdf",
        "tags": [
            [
                8,
                "quickref"
            ],
            [
                9,
                "linux"
            ]
        ]
    }
]

#+END_SRC

*** Search all items which title or word contains a string 

Search all items which contais the word 'cpp'

#+BEGIN_SRC sh
$ curl -s http://localhost:8000/api/search?content=cpp |  python -mjson.tool
[
    {
        "mime": null,
        "colls": [
            [
                8,
                "C++/CPP"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.artima.com/samples/cpp11-14NotesSample.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:16:31"
            ],
            [
                "title",
                "Overview of the New C++ (C++11) - cpp11-14NotesSample.pdf"
            ]
        ],
        "authors": [],
        "id": 23,
        "file": "NUGHRAQW/cpp11-14NotesSample.pdf",
        "tags": [
            [
                10,
                "c++"
            ]
        ]
    },
    {
        "mime": null,
        "colls": [],
        "data": [
            [
                "url",
                "http://www.sam.math.ethz.ch/~hiptmair/tmp/NumCSE/NumCSE15.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:18:20"
            ],
            [
                "title",
                "NumCSE15.pdf"
            ]
        ],
        "authors": [],
        "id": 26,
        "file": "CGZ9CXT8/NumCSE15.pdf",
        "tags": []
    },
    {
        "mime": null,
        "colls": [],
        "data": [
            [
                "url",
                "http://www.sam.math.ethz.ch/~hiptmair/tmp/NumCSE/NumCSE15.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:19:28"
            ],
            [
                "title",
                "NumCSE15.pdf"
            ]
        ],
        "authors": [],
        "id": 28,
        "file": "N8SXGHMN/NumCSE15.pdf",
        "tags": []
    }
]

#+END_SRC

* Database Documentation 
** Search Titles that contains a word 

Search all titles that contains the string "functional".

#+BEGIN_SRC sql 
SELECT itemData.itemID, itemDataValues.value  
FROM   itemData, itemDataValues, itemAttachments
WHERE  fieldID = 110 
AND    itemData.valueID = itemDataValues.valueID
AND    itemAttachments.sourceItemID = itemData.itemID
AND    itemDataValues.value LIKE "%functional%" 
#+END_SRC


#+BEGIN_SRC sql 
sqlite> 
sqlite> SELECT itemData.itemID, itemDataValues.value  
   ...> FROM   itemData, itemDataValues, itemAttachments
   ...> WHERE  fieldID = 110 
   ...> AND    itemData.valueID = itemDataValues.valueID
   ...> AND    itemAttachments.sourceItemID = itemData.itemID
   ...> AND    itemDataValues.value LIKE "%functional%" 
   ...> ;
1936|Functional Programming
2688|Currently struggling. Can someone help em transition from functional programming to using OOP? : learnpython
2750|When to use functional programming languages and techniques - TechRepublic
2752|Where functional programming fits in - TechRepublic
2754|Commercial Uses: Going functional on exotic trades
2772|Functional Programming in the Financial Industry | Open Parallel
2794|An introduction to functional programming
2798|functional programming | Math ∩ Programming
...
#+END_SRC
** Search by a Regex Pattern 

#+BEGIN_SRC sql 
SELECT itemData.itemID, itemDataValues.value  
FROM   itemData, itemDataValues, itemAttachments
WHERE  fieldID = 110 
AND    itemData.valueID = itemDataValues.valueID
AND    itemAttachments.sourceItemID = itemData.itemID
AND    itemDataValues.value REGEXP "math.*" 
#+END_SRC

Result: 

#+BEGIN_SRC sql 
"2987"	"Functional Patterns for the non-mathematician"
"4842"	"Power of mathematics: Reasoning about functional types"
"6094"	"Discrete mathematics using a computer"
#+END_SRC
** Full text search. 

Search all items that have the word "haskell".

#+BEGIN_SRC sql 
SELECT DISTINCT itemID 
FROM   fulltextItemWords, fulltextWords
WHERE  fulltextItemWords.wordID = fulltextWords.wordID
AND    fulltextWords.word LIKE "%haskell%"
#+END_SRC 

Search all items that have the word "haskell" in the title or in the
content.

#+BEGIN_SRC sql 
SELECT itemData.itemID
FROM   itemData, itemDataValues, fulltextItemWords, fulltextWords
WHERE  itemData.fieldID = 110 
AND    itemDataValues.valueID = itemData.valueID
AND    fulltextItemWords.wordID = fulltextWords.wordID
AND    fulltextItemWords.itemID = itemData.itemID
AND    (itemDataValues.value LIKE "%haskell%"
	    OR  
		fulltextWords.word LIKE "%haskell%"
		)	

#+END_SRC
