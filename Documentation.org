#+TITLE: Development Documentation 
#+DESCRIPTION: Documentation for Developers 
#+KEYWORKDS: zotero papers docs documents patent search metadata notes haskell database 
#+STARTUP: contents 

* Development Documentation 
** REST API doc
*** End Points

The API has the following scheme:

| URL Route               | Description                                       |   |
|-------------------------+---------------------------------------------------+---|
| =/api=                  | Display the API documentation                     |   |
| =/api/colls=            | Returns all collections names and collections IDs |   |
| =/api/coll?id=20=       | Returns all items from collection which ID is 20  |   |
| =/api/item?id=10=       | Return the item which ID is 10                    |   |
| =/api/attachment?id=20= | Return a link to file of item  which ID is 10     |   |
|                         |                                                   |   |
*** Examples 
**** Get item by Id 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/item?id=17 |  python -mjson.tool
  {
      "mime": null,
      "colls": [
          [
              7,
              "Linux"
          ]
      ],
      "data": [
          [
              "url",
              "http://www.digilife.be/quickreferences/QRC/LINUX%20Admin%20Quick%20Reference.pdf"
          ],
          [
              "accessDate",
              "2016-11-07 22:06:48"
          ],
          [
              "title",
              "inux/Unix Command Line Cheat Sheet"
          ]
      ],
      "authors": [],
      "id": 17,
      "file": "6DHDAQAP/LINUX Admin Quick Reference.pdf",
      "tags": [
          [
              8,
              "quickref"
          ],
          [
              9,
              "linux"
          ]
      ]
  }

#+END_SRC

**** Get Collections 

Example: Querying the REST api with curl: 

Get collections:

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/colls |  python -mjson.tool
  [
      {
          "name": "C++/CPP",
          "id": 8
      },
      {
          "name": "Fsharp",
          "id": 6
      },
      {
          "name": "Haskell",
          "id": 2
      },
      {
          "name": "Haskell Tutorials",
          "id": 5
      },
      {
          "name": "Haskell doc",
          "id": 3
      },
      {
          "name": "Linux",
          "id": 7
      }
  ]

#+END_SRC

**** Get all Items from a Collection 

Query all items wich belongs to collection Fsharp which id=6.

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/colls?id=6 |  python -mjson.tool
  [
      {
          "mime": null,
          "colls": [
              [
                  6,
                  "Fsharp"
              ]
          ],
          "data": [
              [
                  "url",
                  "http://tomasp.net/articles/fsharp-i-introduction/article.pdf"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:01:04"
              ],
              [
                  "title",
                  "F# Language Overview"
              ]
          ],
          "authors": [
              {
                  "first": "Tomas",
                  "last": "Petriceck",
                  "id": 4
              }
          ],
          "id": 12,
          "file": "678BV2HV/article.pdf",
          "tags": [
              [
                  2,
                  "fp"
              ],
              [
                  3,
                  "fsharp"
              ],
              [
                  4,
                  "doc"
              ],
              [
                  5,
                  "overview"
              ]
          ]
      },
      {
          "mime": null,
          "colls": [
              [
                  6,
                  "Fsharp"
              ]
          ],
          "data": [
              [
                  "url",
                  "http://fsharp.org/specs/language-spec/4.0/FSharpSpec-4.0-latest.pdf"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:00:06"
              ],
              [
                  "title",
                  "The F# 4.0 Language Specification"
              ]
          ],
          "authors": [
              {
                  "first": "Syme",
                  "last": "Don",
                  "id": 5
              },
              {
                  "first": "Alimov",
                  "last": "Anar",
                  "id": 6
              },
              {
                  "first": "Fischer",
                  "last": "Jomo",
                  "id": 7
              }
          ],
          "id": 13,
          "file": "A3APBZAZ/FSharpSpec-4.0-latest.pdf",
          "tags": [
              [
                  2,
                  "fp"
              ],
              [
                  3,
                  "fsharp"
              ],
              [
                  4,
                  "doc"
              ]
          ]
      }
  ]



#+END_SRC

**** Get all authors 

#+BEGIN_SRC json
$ curl -s http://localhost:8000/api/authors |  python -mjson.tool
[
    {
        "first": "",
        "last": "Center for History and New Media",
        "id": 1
    },
    {
        "first": "Alimov",
        "last": "Anar",
        "id": 6
    },
    {
        "first": "Alwyn",
        "last": "Goodloe",
        "id": 20
    },
    {
        "first": "Andrew D.",
        "last": "Gordon",
        "id": 15
    },
    {
        "first": "Dennis M.",
        "last": "Ritchie",
        "id": 9
    },
    {
        "first": "Fischer",
        "last": "Jomo",
        "id": 7
    },

...     ...      ...  ... 
    {
        "first": "Marc",
        "last": "Pouzet",
        "id": 23
    },
    {
        "first": "ONDREJ",
        "last": "\u0160UCH",
        "id": 17
    },
    {
        "first": "Ondrej",
        "last": "\u0160uch",
        "id": 22
    },
    {
        "first": "Paul",
        "last": "Cobbat",
        "id": 8
    },
    {
        "first": "Peter",
        "last": "Jankovic",
        "id": 21
    },
    {
        "first": "R",
        "last": "Hiptmar",
        "id": 13
    },
    {
        "first": "Syme",
        "last": "Don",
        "id": 5
    },
    {
        "first": "Tomas",
        "last": "Petriceck",
        "id": 4
    },
    {
        "first": "Wayne L.",
        "last": "Winston",
        "id": 11
    }
]

#+END_SRC

**** Get all items that belongs to an author 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/authors?id=10 |  python -mjson.tool
  [
      {
          "mime": null,
          "colls": [],
          "data": [
              [
                  "url",
                  "http://jetsonhacks.com/wp-content/uploads/2016/08/unix.pdf"
              ],
              [
                  "volume",
                  "17"
              ],
              [
                  "issue",
                  "7"
              ],
              [
                  "publicationTitle",
                  "Communications of the ACM"
              ],
              [
                  "date",
                  "1974-00-00 1974"
              ],
              [
                  "accessDate",
                  "2016-11-07 22:11:16"
              ],
              [
                  "libraryCatalog",
                  "Google Scholar"
              ],
              [
                  "title",
                  "The UNIX time-sharing system"
              ]
          ],
          "authors": [
              {
                  "first": "Dennis M.",
                  "last": "Ritchie",
                  "id": 9
              },
              {
                  "first": "Ken",
                  "last": "Thompson",
                  "id": 10
              }
          ],
          "id": 21,
          "file": "9NAZ5GJT/unix.pdf",
          "tags": []
      }
  ]

#+END_SRC

**** Get all tags 

#+BEGIN_SRC json
  $ curl -s http://localhost:8000/api/tags |  python -mjson.tool
  [
      {
          "name": "c++",
          "id": 10
      },
      {
          "name": "cpp",
          "id": 14
      },
      {
          "name": "doc",
          "id": 4
      },
      {
          "name": "fp",
          "id": 2
      },
      {
          "name": "frp",
          "id": 16
      },
      {
          "name": "fsharp",
          "id": 3
      },
      ... ... ...

      {
          "name": "numerical",
          "id": 11
      },
      {
          "name": "numerical methods",
          "id": 12
      },
      {
          "name": "overview",
          "id": 5
      },
      {
          "name": "quickref",
          "id": 8
      },
      {
          "name": "reactive",
          "id": 17
      },
      {
          "name": "simulation",
          "id": 15
      },
      {
          "name": "tutorial",
          "id": 7
      }
  ]
      
#+END_SRC

**** Get all items with a tag 

Get all items which contains the tag 'Linux' which Id=9.

#+BEGIN_SRC json
$ curl -s http://localhost:8000/api/tags?id=9 |  python -mjson.tool
[
    {
        "mime": null,
        "colls": [
            [
                7,
                "Linux"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.linuxdevcenter.com/excerpt/LinuxPG_quickref/linux.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:05:40"
            ],
            [
                "title",
                "Linux Quick Reference"
            ]
        ],
        "authors": [],
        "id": 15,
        "file": "ZJMVV5V8/linux.pdf",
        "tags": [
            [
                8,
                "quickref"
            ],
            [
                9,
                "linux"
            ]
        ]
    },
    {
        "mime": null,
        "colls": [
            [
                7,
                "Linux"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.digilife.be/quickreferences/QRC/LINUX%20Admin%20Quick%20Reference.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:06:48"
            ],
            [
                "title",
                "inux/Unix Command Line Cheat Sheet"
            ]
        ],
        "authors": [],
        "id": 17,
        "file": "6DHDAQAP/LINUX Admin Quick Reference.pdf",
        "tags": [
            [
                8,
                "quickref"
            ],
            [
                9,
                "linux"
            ]
        ]
    }
]

#+END_SRC

**** Search all items which title or word contains a string 

Search all items which contais the word 'cpp'

#+BEGIN_SRC sh
$ curl -s http://localhost:8000/api/search?content=cpp |  python -mjson.tool
[
    {
        "mime": null,
        "colls": [
            [
                8,
                "C++/CPP"
            ]
        ],
        "data": [
            [
                "url",
                "http://www.artima.com/samples/cpp11-14NotesSample.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:16:31"
            ],
            [
                "title",
                "Overview of the New C++ (C++11) - cpp11-14NotesSample.pdf"
            ]
        ],
        "authors": [],
        "id": 23,
        "file": "NUGHRAQW/cpp11-14NotesSample.pdf",
        "tags": [
            [
                10,
                "c++"
            ]
        ]
    },
    {
        "mime": null,
        "colls": [],
        "data": [
            [
                "url",
                "http://www.sam.math.ethz.ch/~hiptmair/tmp/NumCSE/NumCSE15.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:18:20"
            ],
            [
                "title",
                "NumCSE15.pdf"
            ]
        ],
        "authors": [],
        "id": 26,
        "file": "CGZ9CXT8/NumCSE15.pdf",
        "tags": []
    },
    {
        "mime": null,
        "colls": [],
        "data": [
            [
                "url",
                "http://www.sam.math.ethz.ch/~hiptmair/tmp/NumCSE/NumCSE15.pdf"
            ],
            [
                "accessDate",
                "2016-11-07 22:19:28"
            ],
            [
                "title",
                "NumCSE15.pdf"
            ]
        ],
        "authors": [],
        "id": 28,
        "file": "N8SXGHMN/NumCSE15.pdf",
        "tags": []
    }
]

#+END_SRC
** Database Documentation 
*** Search Titles that contains a word 

Search all titles that contains the string "functional".

#+BEGIN_SRC sql 
SELECT itemData.itemID, itemDataValues.value  
FROM   itemData, itemDataValues, itemAttachments
WHERE  fieldID = 110 
AND    itemData.valueID = itemDataValues.valueID
AND    itemAttachments.sourceItemID = itemData.itemID
AND    itemDataValues.value LIKE "%functional%" 
#+END_SRC


#+BEGIN_SRC sql 
sqlite> 
sqlite> SELECT itemData.itemID, itemDataValues.value  
   ...> FROM   itemData, itemDataValues, itemAttachments
   ...> WHERE  fieldID = 110 
   ...> AND    itemData.valueID = itemDataValues.valueID
   ...> AND    itemAttachments.sourceItemID = itemData.itemID
   ...> AND    itemDataValues.value LIKE "%functional%" 
   ...> ;
1936|Functional Programming
2688|Currently struggling. Can someone help em transition from functional programming to using OOP? : learnpython
2750|When to use functional programming languages and techniques - TechRepublic
2752|Where functional programming fits in - TechRepublic
2754|Commercial Uses: Going functional on exotic trades
2772|Functional Programming in the Financial Industry | Open Parallel
2794|An introduction to functional programming
2798|functional programming | Math ∩ Programming
...
#+END_SRC
*** Search by a Regex Pattern 

#+BEGIN_SRC sql 
SELECT itemData.itemID, itemDataValues.value  
FROM   itemData, itemDataValues, itemAttachments
WHERE  fieldID = 110 
AND    itemData.valueID = itemDataValues.valueID
AND    itemAttachments.sourceItemID = itemData.itemID
AND    itemDataValues.value REGEXP "math.*" 
#+END_SRC

Result: 

#+BEGIN_SRC sql 
"2987"	"Functional Patterns for the non-mathematician"
"4842"	"Power of mathematics: Reasoning about functional types"
"6094"	"Discrete mathematics using a computer"
#+END_SRC
*** Full text search. 

Search all items that have the word "haskell".

#+BEGIN_SRC sql 
SELECT DISTINCT itemID 
FROM   fulltextItemWords, fulltextWords
WHERE  fulltextItemWords.wordID = fulltextWords.wordID
AND    fulltextWords.word LIKE "%haskell%"
#+END_SRC 

Search all items that have the word "haskell" in the title or in the
content.

#+BEGIN_SRC sql 
SELECT itemData.itemID
FROM   itemData, itemDataValues, fulltextItemWords, fulltextWords
WHERE  itemData.fieldID = 110 
AND    itemDataValues.valueID = itemData.valueID
AND    fulltextItemWords.wordID = fulltextWords.wordID
AND    fulltextItemWords.itemID = itemData.itemID
AND    (itemDataValues.value LIKE "%haskell%"
	    OR  
		fulltextWords.word LIKE "%haskell%"
		)	

#+END_SRC
** Haskell Related Documentation 

Happstack Sever Framework 

 - [[https://hackage.haskell.org/package/happstack-server][happstack-server: Web related tools and services.]]

Haskell SQLite Database Driver 

 - [[https://hackage.haskell.org/package/HDBC-sqlite3-2.3.3.1/docs/Database-HDBC-Sqlite3.html][Database.HDBC.Sqlite3]]

Haskell PostgresSQL Database Driver 

 - [[https://hackage.haskell.org/package/HDBC-postgresql][HDBC-postgresql: PostgreSQL driver for HDBC]]

Haskell AESON - Json library 

 - [[https://hackage.haskell.org/package/aeson][aeson: Fast JSON parsing and encoding]]
